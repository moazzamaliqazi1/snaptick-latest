router
    .post(
        '/auth/register',
        validators.users.signUpPayloadValidation,
        middlewares.validation.request,
        actions.users.auth.register
    )
    .post(
        '/auth/verify-code',
        validators.users.verifyCodePayloadValidation,
        middlewares.validation.request,
        middlewares.local_passport.authenticate,
        actions.users.auth.verifyCode
    )
    .post(
        '/auth/login',
        validators.users.loginPayloadValidation,
        middlewares.validation.request,
        middlewares.local_passport.authenticate,
        middlewares.users.status,
        actions.users.auth.login
    )
    .post(
        '/auth/resend-code',
        validators.users.emailPayloadValidation,
        middlewares.validation.request,
        middlewares.local_passport.authenticate,
        actions.users.auth.resendCode
    )
    .post(
        '/auth/forget-password/change-password',
        middlewares.id_validation.validateId,
        validators.users.forgetPasswordPayloadValidation,
        middlewares.validation.request,
        actions.users.auth.newPassword
    )
    .post(
        '/auth/forget-password/email',
        validators.users.emailPayloadValidation,
        middlewares.validation.request,
        middlewares.local_passport.authenticate,
        actions.users.auth.sendEmailForgotPassword
    )
    .post(
        '/users/change-password',
        validators.users.changePasswordPayloadValidation,
        middlewares.validation.request,
        middlewares.users.status,
        actions.users.auth.changePassword
    )
    .get(
        '/profile',
        middlewares.users.status,
        actions.users.list.getProfile
    )
    .post(
        '/payment/card',
        middlewares.users.status,
        actions.users.edit.addPaymentCard
    )
    .patch(
        '/profile',
        middlewares.users.status,
        actions.users.edit.changeProfile
    )
    .post(
        '/public/contact-message',
        actions.users.auth.sendContactMessage
    )
    .post(
        '/logout',
        actions.users.auth.logout
    )
module.exports = { prefix: 'users', router };
